{% load static %}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Resultados - Recomendador de √Ålbumes</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="{% static 'albums/css/style.css' %}">
    <style>
        .success-message, .error-message {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 10px;
            color: white;
            font-weight: bold;
            z-index: 1000;
            animation: slideIn 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .success-message {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        }

        .error-message {
            background: linear-gradient(135deg, #eb3941 0%, #f45d48 100%);
        }

        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="top-nav">
            <div class="nav-title">üìÄ Album Recommendations</div>
            <div class="nav-buttons">
                <a href="{% url 'listen_later_list' %}" class="btn btn-light">üéß Listen Later</a>
                <a href="{% url 'logout' %}" class="btn btn-light">Logout</a>
            </div>
        </div>

        <h1>üìÄ Resultados de B√∫squeda</h1>
        
        <div class="album-info">
            <div class="album-title">√Ålbum Principal: {{ album_principal.title }}</div>
            <p><strong>G√©nero:</strong> {{ album_principal.genre|join:", "|default:"N/A" }}</p>
            <p><strong>Puntuaci√≥n:</strong> <span class="rating">{{ puntuacion_principal|default:"N/A" }}</span> ({{ cant_puntuaciones_principal }} valoraciones)</p>
        </div>

        <h2>üéØ Recomendaciones</h2>
        <ul class="recommendations">
            {% for disco in recomendaciones %}
                <li class="album-item">
                    <div class="album-title">{{ disco.title }}</div>
                    <p><strong>Artist:</strong> {{ disco.artist|default:"N/A" }}</p>
                    <p><strong>Puntuaci√≥n:</strong> <span class="rating">{{ disco.community.rating.average|default:"N/A" }}/5.0</span> ({{ disco.community.rating.count }} valoraciones)</p>
                    <button class="listen-later-btn" 
                            onclick="addToListenLater(this, {
                                'discogs_id': {{ disco.id|default:'null' }},
                                'title': '{{ disco.title|escapejs }}',
                                'artist': '{{ disco.artist|default:""|escapejs }}',
                                'year': {{ disco.year|default:'null' }}
                            })">
                        + Add to Listen Later
                    </button>
                </li>
            {% empty %}
                <li class="no-results">No se encontraron recomendaciones que cumplan con los criterios.</li>
            {% endfor %}
        </ul>

        <div class="btn-container">
            <a href="{% url 'buscar_album' %}" class="new-search-btn">üîç Nueva B√∫squeda</a>
        </div>
    </div>

    <script>
        function addToListenLater(button, albumData) {
            // Disable button to prevent double-clicking
            button.disabled = true;
            button.textContent = 'Adding...';

            fetch('/add-to-listen-later/', {
                method: 'POST',
                headers: {
                    'X-CSRFToken': getCookie('csrftoken'),
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(albumData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showMessage(data.message, 'success');
                    button.textContent = '‚úì Added';
                    button.style.background = '#6c757d';
                } else {
                    showMessage(data.message || 'Error adding album', 'error');
                    button.disabled = false;
                    button.textContent = '+ Add to Listen Later';
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showMessage('An error occurred', 'error');
                button.disabled = false;
                button.textContent = '+ Add to Listen Later';
            });
        }

        function showMessage(message, type) {
            // Remove existing messages
            const existingMessages = document.querySelectorAll('.success-message, .error-message');
            existingMessages.forEach(msg => msg.remove());

            // Create new message
            const messageDiv = document.createElement('div');
            messageDiv.className = type === 'success' ? 'success-message' : 'error-message';
            messageDiv.textContent = message;
            document.body.appendChild(messageDiv);

            // Auto-remove after 3 seconds
            setTimeout(() => {
                messageDiv.remove();
            }, 3000);
        }

        function getCookie(name) {
            let cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                const cookies = document.cookie.split(';');
                for (let i = 0; i < cookies.length; i++) {
                    const cookie = cookies[i].trim();
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }
    </script>
</body>
</html>
